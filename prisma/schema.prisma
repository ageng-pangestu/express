// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  userName    String
  password    String
  fullName    String
  email       String
  bio         String?
  profile_pic String?
  banner      String?
  createdAt   DateTime @default(now())
  
  like Likes[]
  posts Posts[]

  user Follow[] @relation("user")
  following Follow[] @relation("following")
}

model Posts {
  id        Int @id @default(autoincrement())
  content   String
  image     String?
  createdAt DateTime @default(now())
  userId    Int
  parentId  Int?

  likes Likes[]
  // images     PostImage[]
  author   User @relation(fields: [userId], references: [id])
  
  //self relation
  post     Posts?      @relation("PostReplies", fields: [parentId], references: [id])
  comments Posts[]     @relation("PostReplies")

}

model PostImage {
  id     Int    @id @default(autoincrement())
  image  String
  postId Int

  // post Posts @relation(fields: [postId], references: [id])

}

model Likes {
  id Int @id @default(autoincrement())
  userId Int
  postId Int

 post     Posts      @relation( fields: [postId], references: [id])
 user     User      @relation( fields: [userId], references: [id]) 
}
 
model Follow {
  id Int @id @default(autoincrement())
  userId Int
  followingId Int

  user User @relation("user", fields: [userId], references: [id])
  following User @relation("following",fields: [followingId], references: [id])
}